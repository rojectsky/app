// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as SectionTitle$App from "../../base/form/input/SectionTitle.bs.js";
import * as ContactModalRow$App from "./ContactModalRow.bs.js";
import * as ContactFormConfig$App from "../form/ContactFormConfig.bs.js";
import * as ContactModalStyles$App from "./ContactModalStyles.bs.js";
import * as ReactFontawesome from "@fortawesome/react-fontawesome";

function str(prim) {
  return prim;
}

function ContactModal(Props) {
  var contact = Props.contact;
  var onModalClose = Props.onModalClose;
  return React.createElement("div", {
              className: "modal is-active"
            }, React.createElement("div", {
                  className: "modal-background"
                }), React.createElement("div", {
                  className: "modal-card"
                }, React.createElement("header", {
                      className: ContactModalStyles$App.modalHeaderStyles
                    }, React.createElement("div", {
                          className: "container"
                        }, React.createElement("div", {
                              className: "columns "
                            }, React.createElement("div", {
                                  className: "column is-11"
                                }, React.createElement("div", {
                                      className: "modal-card-title"
                                    }, "Saved", React.createElement("a", {
                                          className: ContactModalStyles$App.checkIconStyles
                                        }, React.createElement(ReactFontawesome.FontAwesomeIcon, {
                                              icon: "check",
                                              color: "green"
                                            }))), React.createElement("div", {
                                      className: ContactModalStyles$App.saveMessageStyles
                                    }, "The contact details has been saved")), React.createElement("div", {
                                  className: "column is-one-quarter"
                                }, React.createElement("button", {
                                      className: "delete",
                                      onClick: (function (param) {
                                          return Curry._1(onModalClose, /* () */0);
                                        })
                                    }))))), React.createElement("section", {
                      className: "modal-card-body"
                    }, React.createElement(SectionTitle$App.make, {
                          title: "Contact Information"
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.FirstNameField.inputContainer.label,
                          value1: contact.firstName,
                          field2: ContactFormConfig$App.LastNameField.inputContainer.label,
                          value2: contact.firstName
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.AccountField.inputContainer.label,
                          value1: contact.account,
                          field2: ContactFormConfig$App.CompanyField.inputContainer.label,
                          value2: contact.company
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.PhoneField.inputContainer.label,
                          value1: contact.phone,
                          field2: ContactFormConfig$App.FaxField.inputContainer.label,
                          value2: contact.fax
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.CompanyTitleField.inputContainer.label,
                          value1: contact.company,
                          field2: ContactFormConfig$App.EmailField.inputContainer.label,
                          value2: contact.email
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.EmailOpField.inputContainer.label,
                          value1: contact.emailOp
                        }), React.createElement(SectionTitle$App.make, {
                          title: "Address Information"
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.StreetField.inputContainer.label,
                          value1: contact.street,
                          field2: ContactFormConfig$App.CityField.inputContainer.label,
                          value2: contact.city
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.StateField.inputContainer.label,
                          value1: contact.state_.value
                        }), React.createElement(SectionTitle$App.make, {
                          title: "Description Information"
                        }), React.createElement(ContactModalRow$App.make, {
                          field1: ContactFormConfig$App.DescriptionField.inputContainer.label,
                          value1: contact.description
                        }))));
}

var make = ContactModal;

var $$default = ContactModal;

export {
  str ,
  make ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
